USE [WorkFlow1]
GO
/****** Object:  StoredProcedure [dbo].[usp_UpdateWorkflowStage]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_UpdateWorkflowStage]
GO
/****** Object:  StoredProcedure [dbo].[usp_UpdateWorkflow]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_UpdateWorkflow]
GO
/****** Object:  StoredProcedure [dbo].[usp_UpdateStageReviewers]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_UpdateStageReviewers]
GO
/****** Object:  StoredProcedure [dbo].[usp_UpdateStageEscalators]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_UpdateStageEscalators]
GO
/****** Object:  StoredProcedure [dbo].[usp_UpdateStage]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_UpdateStage]
GO
/****** Object:  StoredProcedure [dbo].[usp_UpdatePerson]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_UpdatePerson]
GO
/****** Object:  StoredProcedure [dbo].[usp_UpdateDepartment]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_UpdateDepartment]
GO
/****** Object:  StoredProcedure [dbo].[usp_RouteStage]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_RouteStage]
GO
/****** Object:  StoredProcedure [dbo].[usp_RejectStage]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_RejectStage]
GO
/****** Object:  StoredProcedure [dbo].[usp_GetWorkflowMeta]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_GetWorkflowMeta]
GO
/****** Object:  StoredProcedure [dbo].[usp_GetWorkflow]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_GetWorkflow]
GO
/****** Object:  StoredProcedure [dbo].[usp_GetStages]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_GetStages]
GO
/****** Object:  StoredProcedure [dbo].[usp_GetStageReviewers]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_GetStageReviewers]
GO
/****** Object:  StoredProcedure [dbo].[usp_GetStageEscalators]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_GetStageEscalators]
GO
/****** Object:  StoredProcedure [dbo].[usp_GetRequests]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_GetRequests]
GO
/****** Object:  StoredProcedure [dbo].[usp_GetPersons]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_GetPersons]
GO
/****** Object:  StoredProcedure [dbo].[usp_GetEntireWorkflow]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_GetEntireWorkflow]
GO
/****** Object:  StoredProcedure [dbo].[usp_GetDepartments]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_GetDepartments]
GO
/****** Object:  StoredProcedure [dbo].[usp_CreateWorkflowRequest]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_CreateWorkflowRequest]
GO
/****** Object:  StoredProcedure [dbo].[usp_CompleteRequest]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_CompleteRequest]
GO
/****** Object:  StoredProcedure [dbo].[usp_ApproveStage]    Script Date: 22-01-2022 16:53:44 ******/
DROP PROCEDURE [dbo].[usp_ApproveStage]
GO
/****** Object:  StoredProcedure [dbo].[usp_ApproveStage]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[usp_ApproveStage]
@REQUESTSTAGEID INT,
@REVIEWERID INT
AS
BEGIN
	-- SET NOCOUNT ON ADDED TO PREVENT EXTRA RESULT SETS FROM
	-- INTERFERING WITH SELECT STATEMENTS.
	SET NOCOUNT ON;

	UPDATE REQUESTSTAGEREVIEWER 
	SET APPROVALSTATUS = 2 
	WHERE REQUESTSTAGEID = @REQUESTSTAGEID AND REVIEWERID = @REVIEWERID

	DECLARE @REQUESTID AS INT;

	IF EXISTS(SELECT * FROM REQUESTSTAGE WHERE REQUESTSTAGEID = @REQUESTSTAGEID AND ISANYAPPROVER = 1) --------- ANY APPROVER
	BEGIN
		
		SELECT @REQUESTID = RW.REQUESTID FROM REQUESTWORKFLOW RW INNER JOIN REQUESTSTAGE RS ON RW.REQUESTID = RS.REQUESTID
		WHERE RS.REQUESTSTAGEID = @REQUESTSTAGEID

		UPDATE REQUESTSTAGE SET REQUESTSTAGESTATUS = 2 WHERE REQUESTSTAGEID = @REQUESTSTAGEID;
		
		EXEC USP_ROUTESTAGE @REQUESTID
	END
	ELSE --------------- ALL APPROVERS
	BEGIN
		SELECT @REQUESTID = RW.REQUESTID FROM REQUESTWORKFLOW RW INNER JOIN REQUESTSTAGE RS ON RW.REQUESTID = RS.REQUESTID
		WHERE RS.REQUESTSTAGEID = @REQUESTSTAGEID

		IF NOT EXISTS(SELECT * FROM REQUESTSTAGE WHERE REQUESTID = @REQUESTID AND REQUESTSTAGESTATUS IN (0, 1, 3) AND REQUESTSTAGEID <> @REQUESTSTAGEID) ------ NOT ALL REQUEST STAGES MARKED APPROVED
		BEGIN
			UPDATE REQUESTSTAGE SET REQUESTSTAGESTATUS = 2 WHERE REQUESTSTAGEID = @REQUESTSTAGEID;
		
			EXEC USP_ROUTESTAGE @REQUESTID
		END
		ELSE ----------------- PUT THE STAGE IN PROGRESS STATE FROM PENDING STATE
		BEGIN
			UPDATE REQUESTSTAGE SET REQUESTSTAGESTATUS = 1 WHERE REQUESTSTAGEID = @REQUESTSTAGEID AND REQUESTSTAGESTATUS = 0;
		END
	END
END
GO
/****** Object:  StoredProcedure [dbo].[usp_CompleteRequest]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[usp_CompleteRequest]
@REQUESTID INT,
@STATUS INT
AS
BEGIN
	-- SET NOCOUNT ON ADDED TO PREVENT EXTRA RESULT SETS FROM
	-- INTERFERING WITH SELECT STATEMENTS.
	SET NOCOUNT ON;
	
	UPDATE REQUESTWORKFLOW
	SET	REQUESTSTATUS = @STATUS
	WHERE REQUESTID = @REQUESTID

END
GO
/****** Object:  StoredProcedure [dbo].[usp_CreateWorkflowRequest]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[usp_CreateWorkflowRequest]
@WORKFLOWID INT,
@DESCIPTION VARCHAR(500),
@WORKFLOWINSTANCE VARCHAR(500)
AS
BEGIN
	-- SET NOCOUNT ON ADDED TO PREVENT EXTRA RESULT SETS FROM
	-- INTERFERING WITH SELECT STATEMENTS.
	SET NOCOUNT ON;

	DECLARE @REQUESTID AS INT;
	DECLARE @REQUESTSTAGEID AS INT;
	DECLARE @REVIEWTIME AS INT;
	
	SET @REQUESTID  = 0;

	--- ADD REQUEST
	INSERT INTO REQUESTWORKFLOW (WORKFLOWID, DESCIPTION, WORKFLOWINSTANCE) VALUES (@WORKFLOWID, @DESCIPTION, @WORKFLOWINSTANCE);
	SET @REQUESTID = @@IDENTITY;

	--- ADD FIRST STAGE
	INSERT INTO REQUESTSTAGE (REQUESTID, STAGEID, STAGEORDER, REVIEWTIME, REQUESTSTAGESTATUS, ISANYAPPROVER, ISSTAGEAPPROVALMANDETORY, ACTIONCOMMENTMANDETORY)
	SELECT @REQUESTID, STAGEID, STAGEORDER, REVIEWTIME, 0,ISANYAPPROVER, ISSTAGEAPPROVALMANDETORY, ACTIONCOMMENTMANDETORY FROM STAGE
	WHERE STAGEORDER = 1 AND WORKFLOWID = @WORKFLOWID
	
	SET @REQUESTSTAGEID = @@IDENTITY;

	--- UPDATE REQUEST FOR CURRENT STAGE
	UPDATE REQUESTWORKFLOW SET CURRENTSTAGEID = @REQUESTSTAGEID WHERE REQUESTID = @REQUESTID

	--- ADD STAGE REVIEWERS FOR CURRENT STAGE
	INSERT INTO REQUESTSTAGEREVIEWER (REQUESTSTAGEID, REVIEWERID, DEPARTMENTID, APPROVALSTATUS, COMMENT, CREATEDON, REVIEWEDON, REVIEWERINSTANCE, DEPARTMENTINSTANCE)
	SELECT @REQUESTSTAGEID, REVIEWERID, DEPARTMENTID, 0, '', GETDATE(), NULL, NULL, NULL FROM STAGEREVIEWERS
	WHERE STAGEID = (SELECT RS.STAGEID FROM REQUESTSTAGE RS INNER JOIN REQUESTWORKFLOW RW ON RS.REQUESTID = RW.REQUESTID AND RW.CURRENTSTAGEID = RS.REQUESTSTAGEID
						WHERE RW.REQUESTID = @REQUESTID);
	
	--- ADD STAGE ESCALATORS FOR CURRENT STAGE
	INSERT INTO REQUESTSTAGEESCALATOR (REQUESTSTAGEID, ESCALATORID, DEPARTMENTID, APPROVALSTATUS, COMMENT, CREATEDON, ESCALATEDON, ESCALATORINSTANCE, DEPARTMENTINSTANCE)
	SELECT @REQUESTSTAGEID, ESCALATORID, DEPARTMENTID, 0, '', GETDATE(), NULL, NULL, NULL FROM STAGEESCALATORS
	WHERE STAGEID = (SELECT RS.STAGEID FROM REQUESTSTAGE RS INNER JOIN REQUESTWORKFLOW RW ON RS.REQUESTID = RW.REQUESTID AND RW.CURRENTSTAGEID = RS.REQUESTSTAGEID
						WHERE RW.REQUESTID = @REQUESTID);

END
GO
/****** Object:  StoredProcedure [dbo].[usp_GetDepartments]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[usp_GetDepartments]
(
@DEPARTMENTNAME VARCHAR(255),
@CITY VARCHAR(255),
@STATE VARCHAR(255),
@DISTRICT VARCHAR(255),
@PINCODE VARCHAR(6),
@LATITUDE VARCHAR(255),
@LONGITUDE VARCHAR(255),
@DEPTOWNER INT
)
AS
BEGIN
    SET NOCOUNT ON
		SELECT * FROM DEPARTMENT WHERE 1=1 AND 
			(DEPARTMENTNAME IS NULL OR DEPARTMENTNAME = @DEPARTMENTNAME) AND
			(CITY IS NULL OR CITY = @CITY) AND
			(STATE IS NULL OR STATE = @STATE) AND
			(DISTRICT IS NULL OR DISTRICT = @DISTRICT) AND
			(PINCODE IS NULL OR PINCODE = @PINCODE) AND
			(LATITUDE IS NULL OR LATITUDE = @LATITUDE) AND
			(LONGITUDE IS NULL OR LONGITUDE = @LONGITUDE) AND
			(DEPTOWNER IS NULL OR DEPTOWNER = @DEPTOWNER)
END
GO
/****** Object:  StoredProcedure [dbo].[usp_GetEntireWorkflow]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[usp_GetEntireWorkflow]
(
@WORKFLOWID INT
)
AS
BEGIN
    SET NOCOUNT ON
	
	SELECT WORKFLOWID, TITLE, DETAILS FROM WORKFLOW WHERE WORKFLOWID = @WORKFLOWID

	SELECT STAGEID, TITLE, DESCRIPTION, ACTIONCOMMENTMANDETORY, REVIEWTIME, ESCALATIONTIME, ISANYAPPROVER FROM STAGE WHERE WORKFLOWID = @WORKFLOWID

	SELECT PS.USERID, PS.FIRSTNAME, PS.MIDDLENAME, PS.LASTNAME, PS.EMAIL, PS.MOBILE, PS.CITY, PS.[STATE], PS.DISTRICT, PS.PINCODE FROM STAGE ST INNER JOIN STAGEREVIEWERS SR ON ST.STAGEID = SR.STAGEID
	INNER JOIN PERSONS PS ON SR.REVIEWERID = PS.USERID 
	WHERE ST.WORKFLOWID = @WORKFLOWID AND PS.ISACTIVE = 1

	SELECT DT.DEPARTMENTID, DT.DEPARTMENTNAME, DT.CITY, DT.[STATE], DT.DISTRICT, DT.PINCODE, DT.LATITUDE, DT.LONGITUDE, DT.DEPTOWNER, DT.CONTACTDETAILS FROM STAGE ST INNER JOIN STAGEREVIEWERS SR ON ST.STAGEID = SR.STAGEID
	INNER JOIN DEPARTMENT DT ON SR.DEPARTMENTID = DT.DEPARTMENTID 
	WHERE ST.WORKFLOWID = @WORKFLOWID

	SELECT PS.USERID, PS.FIRSTNAME, PS.MIDDLENAME, PS.LASTNAME, PS.EMAIL, PS.MOBILE, PS.CITY, PS.[STATE], PS.DISTRICT, PS.PINCODE FROM STAGE ST INNER JOIN STAGEESCALATORS SE ON ST.STAGEID = SE.STAGEID
	INNER JOIN PERSONS PS ON SE.ESCALATORID = PS.USERID 
	WHERE ST.WORKFLOWID = @WORKFLOWID AND PS.ISACTIVE = 1

	SELECT DT.DEPARTMENTID, DT.DEPARTMENTNAME, DT.CITY, DT.[STATE], DT.DISTRICT, DT.PINCODE, DT.LATITUDE, DT.LONGITUDE, DT.DEPTOWNER, DT.CONTACTDETAILS FROM STAGE ST INNER JOIN STAGEESCALATORS SE ON ST.STAGEID = SE.STAGEID
	INNER JOIN DEPARTMENT DT ON SE.DEPARTMENTID = DT.DEPARTMENTID 
	WHERE ST.WORKFLOWID = @WORKFLOWID

END
GO
/****** Object:  StoredProcedure [dbo].[usp_GetPersons]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[usp_GetPersons]
(
@USERID INT,
@FIRSTNAME VARCHAR(255), 
@MIDDLENAME VARCHAR(255),
@LASTNAME VARCHAR(255),
@EMAIL VARCHAR(100),
@MOBILE VARCHAR(15),
@CITY VARCHAR(255),
@STATE VARCHAR(255),
@DISTRICT VARCHAR(255),
@PINCODE VARCHAR(6)
)
AS
BEGIN
    SET NOCOUNT ON
	SELECT * FROM PERSONS
	WHERE 1=1 AND
	(USERID IS NULL OR USERID = @USERID) AND
	(FIRSTNAME IS NULL OR FIRSTNAME = @FIRSTNAME) AND
	(MIDDLENAME IS NULL OR MIDDLENAME = @MIDDLENAME) AND
	(LASTNAME IS NULL OR LASTNAME = @LASTNAME) AND
	(EMAIL IS NULL OR EMAIL = @EMAIL) AND
	(MOBILE IS NULL OR MOBILE = @MOBILE) AND
	(CITY IS NULL OR CITY = @CITY) AND
	(STATE IS NULL OR STATE = @STATE) AND
	(DISTRICT IS NULL OR DISTRICT = @DISTRICT) AND
	(PINCODE IS NULL OR PINCODE = @PINCODE)
END


GO
/****** Object:  StoredProcedure [dbo].[usp_GetRequests]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[usp_GetRequests] 
@REVIEWERID INT
AS
BEGIN
	-- SET NOCOUNT ON ADDED TO PREVENT EXTRA RESULT SETS FROM
	-- INTERFERING WITH SELECT STATEMENTS.
	SET NOCOUNT ON;
	
	-- WORKFLOWREQUEST
	SELECT RW.WORKFLOWID, RW.REQUESTID, RW.REQUESTSTATUS, RW.CURRENTSTAGEID, RW.DESCIPTION, RW.WORKFLOWINSTANCE FROM REQUESTSTAGE RS LEFT OUTER JOIN REQUESTSTAGEREVIEWER RSR ON RS.REQUESTSTAGEID = RSR.REQUESTSTAGEID
	INNER JOIN REQUESTWORKFLOW RW ON RW.REQUESTID = RS.REQUESTID
	WHERE RSR.REVIEWERID = @REVIEWERID

	-- STAGE
	--SELECT RS.REQUESTSTAGEID, RS.REQUESTID, RS.STAGEID, RS.STAGEORDER, RS.ISSTAGEAPPROVALMANDETORY, RS.ISANYAPPROVER, RS.ACTIONCOMMENTMANDETORY FROM REQUESTSTAGE RS LEFT OUTER JOIN REQUESTSTAGEREVIEWER RSR ON RS.REQUESTSTAGEID = RSR.REQUESTSTAGEID
	--INNER JOIN REQUESTWORKFLOW RW ON RW.REQUESTID = RS.REQUESTID
	--WHERE RSR.REVIEWERID = @REVIEWERID

	-- REVIEWER
	--SELECT RSR.REVIEWERID, RSR.REQUESTSTAGEID, RSR.REQUESTSTAGEREVIEWERID, RSR.APPROVAL, RSR.COMMENT, RSR.REVIEWTIME FROM REQUESTSTAGE RS LEFT OUTER JOIN REQUESTSTAGEREVIEWER RSR ON RS.REQUESTSTAGEID = RSR.REQUESTSTAGEID
	--INNER JOIN REQUESTWORKFLOW RW ON RW.REQUESTID = RS.REQUESTID
	--WHERE RSR.REVIEWERID = @REVIEWERID

END
GO
/****** Object:  StoredProcedure [dbo].[usp_GetStageEscalators]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[usp_GetStageEscalators]
(
@STAGEESCALATORID INT,
@STAGEID INT,
@ESCALATORID INT,
@DEPARTMENTID INT
)
AS
BEGIN
    SET NOCOUNT ON

	SELECT STAGEESCALATORID, STAGEID, ESCALATORID, DEPARTMENTID FROM STAGEESCALATORS
	WHERE (STAGEESCALATORID IS NULL OR STAGEESCALATORID = @STAGEESCALATORID) AND
	(STAGEID IS NULL OR STAGEID = @STAGEID) AND
	(ESCALATORID IS NULL OR ESCALATORID = @ESCALATORID) AND
	(DEPARTMENTID IS NULL OR DEPARTMENTID = @DEPARTMENTID)	

END
GO
/****** Object:  StoredProcedure [dbo].[usp_GetStageReviewers]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[usp_GetStageReviewers]
(
@STAGEREVIEWERID INT,
@STAGEID INT,
@REVIEWERID INT,
@DEPARTMENTID INT,
@ACTIONCOMMENTMANDETORY BIT
)
AS
BEGIN
    SET NOCOUNT ON
	SELECT STAGEREVIEWERID, STAGEID, REVIEWERID, DEPARTMENTID FROM StageReviewers
	WHERE 1=1 AND
	(STAGEREVIEWERID IS NULL OR STAGEREVIEWERID = @STAGEREVIEWERID) AND
	(STAGEID IS NULL OR STAGEID = @STAGEID) AND
	(REVIEWERID IS NULL OR REVIEWERID = @REVIEWERID) AND
	(DEPARTMENTID IS NULL OR DEPARTMENTID = @DEPARTMENTID)	

END
GO
/****** Object:  StoredProcedure [dbo].[usp_GetStages]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[usp_GetStages]
(
@STAGEID INT,
@TITLE VARCHAR(255),
@DESCRIPTION VARCHAR(255),
@WORKFLOWID INT,
@REVIEWTIME INT,
@ESCALATIONTIME INT,
@ISANYAPPROVER BIT,
@STAGEORDER INT, 
@ISSTAGEAPPROVALMANDETORY BIT, 
@ACTIONCOMMENTMANDETORY BIT
)
AS
BEGIN
    SET NOCOUNT ON
	SELECT STAGEID, TITLE, DESCRIPTION, WORKFLOWID, REVIEWTIME, ESCALATIONTIME, ISANYAPPROVER, STAGEORDER, ISSTAGEAPPROVALMANDETORY, ACTIONCOMMENTMANDETORY FROM STAGE
	WHERE 1=1 AND
	(STAGEID IS NULL OR STAGEID = @STAGEID) AND
	(TITLE IS NULL OR TITLE = @TITLE) AND
	(DESCRIPTION IS NULL OR DESCRIPTION = @DESCRIPTION) AND
	(WORKFLOWID IS NULL OR WORKFLOWID = @WORKFLOWID) AND
	(REVIEWTIME IS NULL OR REVIEWTIME = @REVIEWTIME) AND
	(ESCALATIONTIME IS NULL OR ESCALATIONTIME = @ESCALATIONTIME) AND
	(ISANYAPPROVER IS NULL OR ISANYAPPROVER = @ISANYAPPROVER) AND
	(STAGEORDER IS NULL OR STAGEORDER = @STAGEORDER) AND
	(ISSTAGEAPPROVALMANDETORY IS NULL OR ISSTAGEAPPROVALMANDETORY = @ISSTAGEAPPROVALMANDETORY) AND
	(ACTIONCOMMENTMANDETORY IS NULL OR ACTIONCOMMENTMANDETORY = @ACTIONCOMMENTMANDETORY) 
END
GO
/****** Object:  StoredProcedure [dbo].[usp_GetWorkflow]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[usp_GetWorkflow]
(
@WorkflowID int,
@Title VARCHAR(255),
@Details VARCHAR(255)
)
AS
BEGIN
    SET NOCOUNT ON
	DECLARE @SQLQuery AS NVARCHAR(4000)  
	DECLARE @ParamDefinition AS NVARCHAR(2000) 

	Set @SQLQuery ='SELECT * FROM Workflow WHERE true ' 
	IF (@WorkflowID Is Not Null) and (@WorkflowID <> 0)
		SET @SQLQuery = 'AND WorkflowID = @WorkflowID '

	IF (@Title Is Not Null) and (@Title <> '')
		SET @SQLQuery = @SQLQuery + ' AND Title LIKE '''+ '%' + @Title + '%' + ''''

	IF (@Details Is Not Null) and (@Details <> '')
		SET @SQLQuery = @SQLQuery + ' AND Details LIKE '''+ '%' + @Details + '%' + ''''

		
	SET @ParamDefinition = '@WorkflowID int, @Title VARCHAR(255), @Details VARCHAR(255)'

	EXECUTE sp_Executesql @SQLQuery, @ParamDefinition, @WorkflowID, @Title, @Details

END
GO
/****** Object:  StoredProcedure [dbo].[usp_GetWorkflowMeta]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[usp_GetWorkflowMeta]
(
@WORKFLOWID INT
)
AS
BEGIN
    SET NOCOUNT ON
	SELECT WORKFLOWID, TITLE, DETAILS FROM WORKFLOW WHERE (@WORKFLOWID IS NULL OR WORKFLOWID = @WORKFLOWID)
END
GO
/****** Object:  StoredProcedure [dbo].[usp_RejectStage]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[usp_RejectStage]
@REQUESTSTAGEID INT,
@REVIEWERID INT
AS
BEGIN
	-- SET NOCOUNT ON ADDED TO PREVENT EXTRA RESULT SETS FROM
	-- INTERFERING WITH SELECT STATEMENTS.
	SET NOCOUNT ON;

	UPDATE REQUESTSTAGEREVIEWER 
	SET APPROVALSTATUS = 3
	WHERE REQUESTSTAGEID = @REQUESTSTAGEID AND REVIEWERID = @REVIEWERID

	DECLARE @REQUESTID INT; 

	SELECT @REQUESTID = REQUESTID FROM REQUESTSTAGE WHERE REQUESTSTAGEID = @REQUESTSTAGEID

	EXEC USP_COMPLETEREQUEST @REQUESTID, 3;
	
END
GO
/****** Object:  StoredProcedure [dbo].[usp_RouteStage]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- AUTHOR:		<AUTHOR,,NAME>
-- CREATE DATE: <CREATE DATE,,>
-- DESCRIPTION:	<DESCRIPTION,,>
-- =============================================
CREATE PROCEDURE [dbo].[usp_RouteStage]
@REQUESTID INT
AS
BEGIN
	-- SET NOCOUNT ON ADDED TO PREVENT EXTRA RESULT SETS FROM
	-- INTERFERING WITH SELECT STATEMENTS.
	SET NOCOUNT ON;

	DECLARE @NEXTREQUESTSTAGEID AS INT;
	
	---- IF CURRENT REQUESTSTAGE IS LAST REQUESTSTAGE 
	IF EXISTS (SELECT RS.STAGEORDER FROM REQUESTSTAGE RS INNER JOIN REQUESTWORKFLOW RW ON RS.REQUESTID = RW.REQUESTID AND RW.CURRENTSTAGEID = RS.REQUESTSTAGEID
			   WHERE RS.STAGEORDER = (SELECT MAX(STAGEORDER) AS STAGEORDER FROM STAGE))
	BEGIN
		--- IF STAGE IS APPROVED COMPLETE THE REQUEST WITH APPROVED STATUS
		IF EXISTS(SELECT * FROM REQUESTSTAGE RS INNER JOIN REQUESTWORKFLOW RW ON RS.REQUESTID = RW.REQUESTID AND RW.CURRENTSTAGEID = RS.REQUESTSTAGEID
		WHERE RS.REQUESTSTAGESTATUS = 2 AND RW.REQUESTID = @REQUESTID)
		BEGIN
			EXEC USP_COMPLETEREQUEST @REQUESTID, 2
		END
		--- IF STAGE IS REJECTED COMPLETE THE REQUEST WITH REJECTED STATUS
		ELSE IF EXISTS(SELECT * FROM REQUESTSTAGE RS INNER JOIN REQUESTWORKFLOW RW ON RS.REQUESTID = RW.REQUESTID AND RW.CURRENTSTAGEID = RS.REQUESTSTAGEID
		WHERE RS.REQUESTSTAGESTATUS = 3)
		BEGIN
			EXEC USP_COMPLETEREQUEST @REQUESTID, 3
		END
	END
	ELSE ---- IF CURRENT REQUESTSTAGE IS NOT LAST REQUESTSTAGE FOR REQUEST
	BEGIN
		--- IF STAGE IS APPROVED ROUTE TO NEXT STAGE FOR WORKFLOWTYPE
		IF EXISTS(SELECT RS.REQUESTID FROM REQUESTSTAGE RS INNER JOIN REQUESTWORKFLOW RW ON RS.REQUESTID = RW.REQUESTID AND RW.CURRENTSTAGEID = RS.REQUESTSTAGEID
		WHERE RS.REQUESTSTAGESTATUS = 2 AND RW.REQUESTID = @REQUESTID)
		BEGIN
			--- ADD NEXT STAGE FOR REQUEST AND SELECTED WORKFLOW
			INSERT INTO REQUESTSTAGE (REQUESTID, STAGEID, STAGEORDER, REVIEWTIME, REQUESTSTAGESTATUS, ISANYAPPROVER, ISSTAGEAPPROVALMANDETORY, ACTIONCOMMENTMANDETORY)
			SELECT @REQUESTID, STAGEID, STAGEORDER, REVIEWTIME, 0, ISANYAPPROVER, ISSTAGEAPPROVALMANDETORY, ACTIONCOMMENTMANDETORY FROM STAGE
			WHERE STAGEORDER = (SELECT RS.STAGEORDER FROM REQUESTSTAGE RS INNER JOIN REQUESTWORKFLOW RW ON RS.REQUESTID = RW.REQUESTID AND RW.CURRENTSTAGEID = RS.REQUESTSTAGEID
								WHERE RS.REQUESTSTAGESTATUS = 2 AND RW.REQUESTID = @REQUESTID) + 1

			SET @NEXTREQUESTSTAGEID = @@IDENTITY;

			--- UPDATE CURRENTSTAGE FOR REQUEST FOR SELECTED WORKFLOW
			UPDATE REQUESTWORKFLOW SET CURRENTSTAGEID = @NEXTREQUESTSTAGEID WHERE REQUESTID = @REQUESTID

			--- ADD REVIEWERS FOR CURRENT STAGE FOR REQUEST FOR SELECTED WORKFLOW
			INSERT INTO REQUESTSTAGEREVIEWER (REQUESTSTAGEID, REVIEWERID, DEPARTMENTID, APPROVALSTATUS, COMMENT, CREATEDON, REVIEWEDON, REVIEWERINSTANCE, DEPARTMENTINSTANCE)
			SELECT @NEXTREQUESTSTAGEID, REVIEWERID, DEPARTMENTID, 0, '', GETDATE(), NULL, NULL, NULL FROM STAGEREVIEWERS
			WHERE STAGEID = (SELECT RS.STAGEID FROM REQUESTSTAGE RS INNER JOIN REQUESTWORKFLOW RW ON RS.REQUESTID = RW.REQUESTID AND RW.CURRENTSTAGEID = RS.REQUESTSTAGEID
							 WHERE RW.REQUESTID = @REQUESTID);
			
			--- ADD ESCALATORS FOR CURRENT STAGE FOR REQUEST FOR SELECTED WORKFLOW
			INSERT INTO REQUESTSTAGEESCALATOR (REQUESTSTAGEID, ESCALATORID, DEPARTMENTID, APPROVALSTATUS, COMMENT, CREATEDON, ESCALATEDON, ESCALATORINSTANCE, DEPARTMENTINSTANCE)
			SELECT @NEXTREQUESTSTAGEID, ESCALATORID, DEPARTMENTID, 0, '', GETDATE(), NULL, NULL, NULL FROM STAGEESCALATORS
			WHERE STAGEID = (SELECT RS.STAGEID FROM REQUESTSTAGE RS INNER JOIN REQUESTWORKFLOW RW ON RS.REQUESTID = RW.REQUESTID AND RW.CURRENTSTAGEID = RS.REQUESTSTAGEID
							 WHERE RW.REQUESTID = @REQUESTID);
		END
		--- IF STAGE IS REJECTED COMPLETE THE REQUEST WITH REJECTED STATUS
		ELSE IF EXISTS(SELECT * FROM REQUESTSTAGE RS INNER JOIN REQUESTWORKFLOW RW ON RS.REQUESTID = RW.REQUESTID AND RW.CURRENTSTAGEID = RS.REQUESTSTAGEID
		WHERE RS.REQUESTSTAGESTATUS = 3 AND RW.REQUESTID = @REQUESTID)
		BEGIN
			EXEC USP_COMPLETEREQUEST @REQUESTID, 3
		END
	END
END
GO
/****** Object:  StoredProcedure [dbo].[usp_UpdateDepartment]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[usp_UpdateDepartment]
(
@DEPARTMENTID INT,
@PARENTDEPARTMENTID INT,
@DEPARTMENTNAME VARCHAR(255),
@CITY VARCHAR(255),
@STATE VARCHAR(255),
@DISTRICT VARCHAR(255),
@PINCODE VARCHAR(6),
@LATITUDE VARCHAR(255),
@LONGITUDE VARCHAR(255),
@DEPTOWNER INT,
@CONTACTDETAILS VARCHAR(255)
)
AS
BEGIN
    SET NOCOUNT ON
	UPDATE DEPARTMENT 
	SET PARENTDEPARTMENTID = ISNULL(@PARENTDEPARTMENTID, PARENTDEPARTMENTID),
	DEPARTMENTNAME = ISNULL(@DEPARTMENTNAME, DEPARTMENTNAME),
	CITY = ISNULL(@CITY, CITY),
	STATE = ISNULL(@STATE, STATE),
	DISTRICT = ISNULL(@DISTRICT, DISTRICT),
	PINCODE = ISNULL(@PINCODE, PINCODE),
	LATITUDE = ISNULL(@LATITUDE, LATITUDE),
	LONGITUDE = ISNULL(@LONGITUDE, LONGITUDE),
	DEPTOWNER = ISNULL(@DEPTOWNER, DEPTOWNER),
	CONTACTDETAILS = ISNULL(@CONTACTDETAILS, CONTACTDETAILS)
	WHERE DEPARTMENTID = @DEPARTMENTID
END

GO
/****** Object:  StoredProcedure [dbo].[usp_UpdatePerson]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[usp_UpdatePerson]
(
@USERID INT,
@FIRSTNAME VARCHAR(255), 
@MIDDLENAME VARCHAR(255),
@LASTNAME VARCHAR(255),
@EMAIL VARCHAR(100),
@MOBILE VARCHAR(15),
@CITY VARCHAR(255),
@STATE VARCHAR(255),
@DISTRICT VARCHAR(255),
@PINCODE VARCHAR(6)
)
AS
BEGIN
    SET NOCOUNT ON
	UPDATE PERSONS
		SET FIRSTNAME = ISNULL(@FIRSTNAME, FIRSTNAME),
		MIDDLENAME = ISNULL(@MIDDLENAME, MIDDLENAME),
		LASTNAME = ISNULL(@LASTNAME, LASTNAME),
		EMAIL = ISNULL(@EMAIL, EMAIL),
		MOBILE = ISNULL(@MOBILE, MOBILE),
		CITY = ISNULL(@CITY, CITY),
		STATE = ISNULL(@STATE, STATE),
		DISTRICT = ISNULL(@DISTRICT, DISTRICT),
		PINCODE = ISNULL(@PINCODE, PINCODE)
	WHERE USERID = @USERID
END


GO
/****** Object:  StoredProcedure [dbo].[usp_UpdateStage]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[usp_UpdateStage]
(
@STAGEID INT,
@TITLE VARCHAR(255),
@DESCRIPTION VARCHAR(255),
@WORKFLOWID INT,
@REVIEWTIME INT,
@ESCALATIONTIME INT,
@ISANYAPPROVER BIT,
@STAGEORDER INT,
@ISSTAGEAPPROVALMANDETORY BIT,
@ACTIONCOMMENTMANDETORY BIT
)
AS
BEGIN
    SET NOCOUNT ON
	UPDATE STAGE
		SET TITLE = ISNULL(@TITLE, TITLE),
			DESCRIPTION = ISNULL(@DESCRIPTION, DESCRIPTION),
			WORKFLOWID = ISNULL(@WORKFLOWID, WORKFLOWID),
			REVIEWTIME = ISNULL(@REVIEWTIME, REVIEWTIME),
			ESCALATIONTIME = ISNULL(@ESCALATIONTIME, ESCALATIONTIME),
			ISANYAPPROVER = ISNULL(@ISANYAPPROVER, ISANYAPPROVER),
			STAGEORDER = ISNULL(@STAGEORDER, STAGEORDER),
			ISSTAGEAPPROVALMANDETORY = ISNULL(@ISSTAGEAPPROVALMANDETORY, ISSTAGEAPPROVALMANDETORY),
			ACTIONCOMMENTMANDETORY = ISNULL(@ACTIONCOMMENTMANDETORY, ACTIONCOMMENTMANDETORY)
	WHERE STAGEID = @STAGEID
END
GO
/****** Object:  StoredProcedure [dbo].[usp_UpdateStageEscalators]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[usp_UpdateStageEscalators]
(
@STAGEESCALATORID INT,
@STAGEID INT,
@ESCALATORID INT,
@DEPARTMENTID INT
)
AS
BEGIN
    SET NOCOUNT ON
	UPDATE STAGEESCALATORS
	SET
		STAGEID = ISNULL(@STAGEID, STAGEID),
		ESCALATORID = ISNULL(@ESCALATORID, ESCALATORID),
		DEPARTMENTID = ISNULL(@DEPARTMENTID, DEPARTMENTID)
	WHERE @STAGEESCALATORID = STAGEESCALATORID
END
GO
/****** Object:  StoredProcedure [dbo].[usp_UpdateStageReviewers]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[usp_UpdateStageReviewers]
(
@STAGEREVIEWERID INT,
@STAGEID INT,
@REVIEWERID INT,
@DEPARTMENTID INT,
@ACTIONCOMMENTMANDETORY BIT
)
AS
BEGIN
    SET NOCOUNT ON
	UPDATE STAGEREVIEWERS
	SET
		STAGEID = ISNULL(@STAGEID, STAGEID),
		REVIEWERID = ISNULL(@REVIEWERID, REVIEWERID),
		DEPARTMENTID = ISNULL(@DEPARTMENTID, DEPARTMENTID)
	WHERE STAGEREVIEWERID = @STAGEREVIEWERID
END
GO
/****** Object:  StoredProcedure [dbo].[usp_UpdateWorkflow]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[usp_UpdateWorkflow]
(
@WORKFLOWID INT,
@TITLE VARCHAR(255),
@DETAILS VARCHAR(255)
)
AS
BEGIN
    SET NOCOUNT ON
	UPDATE WORKFLOW
	SET
		TITLE = ISNULL(@TITLE, TITLE),
		DETAILS = ISNULL(@DETAILS, DETAILS)
	WHERE WORKFLOWID = @WORKFLOWID
END
GO
/****** Object:  StoredProcedure [dbo].[usp_UpdateWorkflowStage]    Script Date: 22-01-2022 16:53:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[usp_UpdateWorkflowStage]
(
@WorkflowStageID int,
@WorkflowID int,
@StageID int,
@StageOrder int,
@IsStageApprovalMandetory BIT
)
AS
BEGIN
    SET NOCOUNT ON
	UPDATE WorkflowStage
	SET
		WorkflowID = ISNULL(@WorkflowID, WorkflowID),
		StageID = ISNULL(@StageID, StageID),
		StageOrder = ISNULL(@StageOrder, StageOrder),
		IsStageApprovalMandetory = ISNULL(@IsStageApprovalMandetory, IsStageApprovalMandetory)
	WHERE WorkflowStageID = @WorkflowStageID
END
GO
